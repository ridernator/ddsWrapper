//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.27 at 08:06:25 PM GMT 
//


package com.rider.ddswrapper.configuration;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.rider.ddswrapper.configuration package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.rider.ddswrapper.configuration
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DDSSettings }
     * 
     */
    public DDSSettings createDDSSettings() {
        return new DDSSettings();
    }

    /**
     * Create an instance of {@link DomainParticipant }
     * 
     */
    public DomainParticipant createDomainParticipant() {
        return new DomainParticipant();
    }

    /**
     * Create an instance of {@link Requester }
     * 
     */
    public Requester createRequester() {
        return new Requester();
    }

    /**
     * Create an instance of {@link Replier }
     * 
     */
    public Replier createReplier() {
        return new Replier();
    }

    /**
     * Create an instance of {@link Subscriber }
     * 
     */
    public Subscriber createSubscriber() {
        return new Subscriber();
    }

    /**
     * Create an instance of {@link Reader }
     * 
     */
    public Reader createReader() {
        return new Reader();
    }

    /**
     * Create an instance of {@link Publisher }
     * 
     */
    public Publisher createPublisher() {
        return new Publisher();
    }

    /**
     * Create an instance of {@link Writer }
     * 
     */
    public Writer createWriter() {
        return new Writer();
    }

}
